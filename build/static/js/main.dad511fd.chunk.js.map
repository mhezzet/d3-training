{"version":3,"sources":["d3/AreaChart.jsx","d3/BarChart.jsx","d3/CarsScatterPlot.jsx","d3/Face.jsx","d3/Interactions.jsx","d3/ScatterChart.jsx","d3/TempLineChart.jsx","d3/CountriesTree.jsx","d3/ChoroplethMap.jsx","d3/MultiLineChart.jsx","index.jsx","App.jsx"],"names":["AreaChart","sandbox","useRef","useEffect","svg","d3","current","width","attr","height","then","data","forEach","d","year","Date","population","yValue","xValue","margin","innerWidth","innerHeight","xScale","domain","range","nice","yScale","graph","append","concat","yAxis","tickSize","tickFormat","n","replace","tickPadding","call","style","xAxis","select","remove","areaGenerator","x","y0","y1","curve","text","selectAll","render","react_default","a","createElement","ref","BarChart","country","map","paddingInner","number","enter","bandwidth","CarsScatterPlot","_useState","useState","_useState2","Object","slicedToArray","setData","_useState3","_useState4","axes","setAxes","titleLabel","xAxisLabel","yAxisLabel","reverse","graphEnter","merge","transition","duration","circles","mpg","cylinders","displacement","horsepower","weight","acceleration","selectChangeHandler","e","value","target","Fragment","display","marginRight","htmlFor","id","onChange","marginLeft","Face","arc","leftEye","rightEye","innerRadius","outerRadius","startAngle","Math","PI","endAngle","Interactions","initailState","fruits","setFruits","opacity","setOpacity","renderBowelOfFruit","selectFruit","fruit","frts","frt","selected","addFruit","name","toConsumableArray","type","random","onClick","splice","length","o","objectSpread","selection","props","colorScale","radiusScale","fruitGroups","fruitGroupsEnter","on","exit","ScatterChart","padding","TempLineChart","temperature","timestamp","lineGenerator","y","CountriesTree","treeRoot","setTreeRoot","treeLayout","size","whole","links","linkPathGeneratpor","transform","descendants","children","depth","ChoroplethMap","setMap","mapMeta","setMapMeta","_useState5","_useState6","category","setCategory","projection","pathGenerator","countries","feature","objects","wholeUpdate","wholeEnter","legend","values","reduce","allColors","includes","economy","sort","economyColorScale","countryPaths","features","countryPathsEnter","economyColorLegend","circleRadius","spacing","textOffset","rectWidth","c","defineProperty","iso_n3","container","groups","groupsEnter","_","i","MultiLineChart","nestedData","key","city","entries","colorLegend","ReactDOM","flexDirection","alignItems","justifyContent","marginBottom","document","getElementById"],"mappings":"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","file":"static/js/main.dad511fd.chunk.js","sourcesContent":["import * as d3 from 'd3'\r\nimport React, { useEffect, useRef } from 'react'\r\n\r\nexport default function AreaChart() {\r\n  const sandbox = useRef(null)\r\n\r\n  useEffect(() => {\r\n    const svg = d3.select(sandbox.current)\r\n    const width = svg.attr('width')\r\n    const height = svg.attr('height')\r\n    const titleLabel = 'The World Population 2015'\r\n    const xAxisLabel = 'Year'\r\n    const yAxisLabel = 'Population'\r\n\r\n    const render = data => {\r\n      const yValue = d => d.population\r\n      const xValue = d => d.year\r\n      const margin = { top: 50, right: 30, bottom: 50, left: 80 }\r\n      const innerWidth = width - margin.right - margin.left\r\n      const innerHeight = height - margin.top - margin.bottom\r\n\r\n      const xScale = d3\r\n        .scaleTime()\r\n        .domain(d3.extent(data, xValue))\r\n        .range([0, innerWidth])\r\n        .nice()\r\n\r\n      const yScale = d3\r\n        .scaleLinear()\r\n        .domain([0, d3.max(data, yValue)])\r\n        .range([innerHeight, 0])\r\n        .nice()\r\n\r\n      const graph = svg\r\n        .append('g')\r\n        .attr('transform', `translate(${margin.left},${margin.top})`)\r\n\r\n      //left axis\r\n      const yAxis = d3\r\n        .axisLeft(yScale)\r\n        .tickSize(-innerWidth)\r\n        .tickFormat(n =>\r\n          d3\r\n            .format('.1s')(n)\r\n            .replace('G', 'B')\r\n        )\r\n        .tickPadding(10)\r\n\r\n      graph\r\n        .append('g')\r\n        .call(yAxis)\r\n        .style('color', '#635F5D')\r\n\r\n      //bottom axis\r\n      const xAxis = d3\r\n        .axisBottom(xScale)\r\n        .tickSize(-innerHeight)\r\n        .tickPadding(10)\r\n\r\n      graph\r\n        .append('g')\r\n        .call(xAxis)\r\n        .style('color', '#635F5D')\r\n        .attr('transform', `translate(0,${innerHeight})`)\r\n        .select('.domain')\r\n        .remove()\r\n\r\n      const areaGenerator = d3\r\n        .area()\r\n        .x(d => xScale(xValue(d)))\r\n        .y0(innerHeight)\r\n        .y1(d => yScale(yValue(d)))\r\n        .curve(d3.curveBasis)\r\n\r\n      graph\r\n        .append('path')\r\n        .attr('d', areaGenerator(data))\r\n        .style('fill', 'cornflowerblue')\r\n        .style('opacity', '0.7')\r\n        .style('stroke-linejoin', 'round')\r\n\r\n      graph\r\n        .append('text')\r\n        .text(titleLabel)\r\n        .attr('transform', `translate(100,-20)`)\r\n        .attr('fill', '#635F5D')\r\n\r\n      graph\r\n        .append('text')\r\n        .text(xAxisLabel)\r\n        .attr('transform', `translate(260,350)`)\r\n        .style('font-size', '1.2em')\r\n        .style('color', '#C0C0BB')\r\n        .attr('fill', '#C0C0BB')\r\n\r\n      graph\r\n        .append('text')\r\n        .text(yAxisLabel)\r\n        .attr('transform', 'rotate(-90)')\r\n        .attr('x', -innerHeight / 2 - 50)\r\n        .attr('y', -60)\r\n        .style('font-size', '1.2em')\r\n        .style('color', '#C0C0BB')\r\n        .attr('fill', '#C0C0BB')\r\n\r\n      graph.selectAll('.tick line').style('color', '#C0C0BB')\r\n      graph.select('line').remove()\r\n    }\r\n\r\n    d3.csv('world-population-2015.csv').then(data => {\r\n      data.forEach(d => {\r\n        d.year = new Date(d.year)\r\n        d.population = +d.population\r\n      })\r\n      render(data)\r\n    })\r\n  }, [sandbox])\r\n\r\n  return <svg ref={sandbox} width=\"700\" height=\"400\" />\r\n}\r\n","import * as d3 from 'd3'\r\nimport React, { useEffect, useRef } from 'react'\r\n\r\nexport default function BarChart() {\r\n  const sandbox = useRef(null)\r\n\r\n  useEffect(() => {\r\n    const svg = d3.select(sandbox.current)\r\n    const width = svg.attr('width')\r\n    const height = svg.attr('height')\r\n\r\n    const render = data => {\r\n      const xValue = d => d.population\r\n      const yValue = d => d.country\r\n      const margin = { top: 50, right: 30, bottom: 100, left: 120 }\r\n      const innerWidth = width - margin.right - margin.left\r\n      const innerHeight = height - margin.top - margin.bottom\r\n\r\n      const xScale = d3\r\n        .scaleLinear()\r\n        .domain([0, d3.max(data, xValue)])\r\n        .range([0, innerWidth])\r\n\r\n      const yScale = d3\r\n        .scaleBand()\r\n        .domain(data.map(yValue))\r\n        .range([0, innerHeight])\r\n        .paddingInner(0.3)\r\n\r\n      const graph = svg\r\n        .append('g')\r\n        .attr('transform', `translate(${margin.left},${margin.top})`)\r\n\r\n      //left axis\r\n      graph\r\n        .append('g')\r\n        .call(d3.axisLeft(yScale))\r\n        .style('color', '#635F5D')\r\n        .selectAll('.domain, .tick>line')\r\n        .remove()\r\n\r\n      //bottom axis\r\n      const xAxis = d3\r\n        .axisBottom(xScale)\r\n        .tickFormat(number =>\r\n          d3\r\n            .format('0.2s')(number)\r\n            .replace('G', 'B')\r\n        )\r\n        .tickSize(-innerHeight)\r\n\r\n      graph\r\n        .append('g')\r\n        .call(xAxis)\r\n        .style('color', '#635F5D')\r\n        .attr('transform', `translate(0,${innerHeight})`)\r\n        .select('.domain')\r\n        .remove()\r\n\r\n      //graph bars\r\n      graph\r\n        .selectAll('rect')\r\n        .data(data)\r\n        .enter()\r\n        .append('rect')\r\n        .attr('y', d => yScale(yValue(d)))\r\n        .attr('width', d => xScale(xValue(d)))\r\n        .attr('height', yScale.bandwidth())\r\n        .attr('fill', 'cornflowerblue')\r\n\r\n      graph\r\n        .append('text')\r\n        .text('Top 10 Most Populous Countries')\r\n        .attr('transform', `translate(100,-20)`)\r\n        .attr('fill', '#635F5D')\r\n\r\n      graph\r\n        .append('text')\r\n        .text('Population')\r\n        .attr('transform', `translate(230,300)`)\r\n        .style('font-size', '1.2em')\r\n        .style('color', '#C0C0BB')\r\n        .attr('fill', '#C0C0BB')\r\n\r\n      graph.selectAll('.tick line').style('color', '#C0C0BB')\r\n      graph.select('line').remove()\r\n    }\r\n\r\n    d3.csv('population.csv').then(data => {\r\n      data.forEach(d => (d.population = +d.population * 1000))\r\n      render(data)\r\n    })\r\n  }, [sandbox])\r\n\r\n  return <svg ref={sandbox} width=\"700\" height=\"400\" />\r\n}\r\n","import * as d3 from 'd3'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\n\r\nexport default function CarsScatterPlot() {\r\n  const sandbox = useRef(null)\r\n  const [data, setData] = useState(null)\r\n  const [axes, setAxes] = useState(['horsepower', 'weight'])\r\n\r\n  useEffect(() => {\r\n    if (!data) return\r\n    const svg = d3.select(sandbox.current)\r\n    const width = svg.attr('width')\r\n    const height = svg.attr('height')\r\n    const titleLabel = `cars plot ${axes[0]} vs ${axes[1]}`\r\n    const xAxisLabel = axes[0]\r\n    const yAxisLabel = axes[1]\r\n\r\n    const xValue = d => d[axes[0]]\r\n    const yValue = d => d[axes[1]]\r\n    const margin = { top: 50, right: 30, bottom: 50, left: 80 }\r\n    const innerWidth = width - margin.right - margin.left\r\n    const innerHeight = height - margin.top - margin.bottom\r\n\r\n    const xScale = d3\r\n      .scaleLinear()\r\n      .domain(d3.extent(data, xValue))\r\n      .range([0, innerWidth])\r\n      .nice()\r\n\r\n    const yScale = d3\r\n      .scaleLinear()\r\n      .domain(d3.extent(data, yValue).reverse())\r\n      .range([0, innerHeight])\r\n      .nice()\r\n\r\n    const graph = svg.selectAll('.graph').data([null])\r\n    const graphEnter = graph.enter().append('g')\r\n\r\n    graphEnter\r\n      .merge(graph)\r\n      .attr('transform', `translate(${margin.left},${margin.top})`)\r\n      .attr('class', 'graph')\r\n\r\n    graphEnter\r\n      .append('text')\r\n      .attr('class', 'title')\r\n      .attr('transform', `translate(100,-20)`)\r\n      .merge(graph.select('.title'))\r\n      .transition()\r\n      .duration(1000)\r\n      .text(titleLabel)\r\n      .attr('fill', '#635F5D')\r\n\r\n    //left axis\r\n    const yAxis = d3\r\n      .axisLeft(yScale)\r\n      .tickSize(-innerWidth)\r\n      .tickPadding(10)\r\n\r\n    graphEnter\r\n      .append('g')\r\n      .attr('class', 'y-axis')\r\n      .style('color', '#635F5D')\r\n      .merge(graph.select('.y-axis'))\r\n      .transition()\r\n      .duration(1000)\r\n      .call(yAxis)\r\n      .selectAll('.domain')\r\n      .remove()\r\n\r\n    graphEnter\r\n      .append('text')\r\n      .attr('class', 'y-axis-label')\r\n      .attr('transform', 'rotate(-90)')\r\n      .attr('x', -innerHeight / 2 - 50)\r\n      .attr('y', -60)\r\n      .style('font-size', '1.2em')\r\n      .style('color', '#C0C0BB')\r\n      .attr('fill', '#C0C0BB')\r\n      .merge(graph.select('.y-axis-label'))\r\n      .transition()\r\n      .duration(1000)\r\n      .text(yAxisLabel)\r\n\r\n    //bottom axis\r\n    const xAxis = d3\r\n      .axisBottom(xScale)\r\n      .tickSize(-innerHeight)\r\n      .tickPadding(10)\r\n\r\n    graphEnter\r\n      .append('g')\r\n      .attr('class', 'x-axis')\r\n      .style('color', '#635F5D')\r\n      .merge(graph.select('.x-axis'))\r\n      .transition()\r\n      .duration(1000)\r\n      .call(xAxis)\r\n      .attr('transform', `translate(0,${innerHeight})`)\r\n      .select('.domain')\r\n      .remove()\r\n\r\n    graphEnter\r\n      .append('text')\r\n      .attr('transform', `translate(250,340)`)\r\n      .attr('class', 'x-axis-label')\r\n      .style('font-size', '1.2em')\r\n      .style('color', '#C0C0BB')\r\n      .attr('fill', '#C0C0BB')\r\n      .merge(graph.select('.x-axis-label'))\r\n      .transition()\r\n      .duration(1000)\r\n      .text(xAxisLabel)\r\n\r\n    //graph circles\r\n    const circles = graph\r\n      .merge(graphEnter)\r\n      .selectAll('circle')\r\n      .data(data)\r\n    circles\r\n      .enter()\r\n      .append('circle')\r\n      .attr('cy', innerHeight / 2)\r\n      .attr('cx', innerWidth / 2)\r\n      .attr('r', 0)\r\n      .attr('fill', 'cornflowerblue')\r\n      .style('opacity', 0.5)\r\n      .attr('r', 6)\r\n      .merge(circles)\r\n      .transition()\r\n      .duration(1000)\r\n      .attr('cy', d => yScale(yValue(d)))\r\n      .attr('cx', d => xScale(xValue(d)))\r\n\r\n    graph.selectAll('.tick line').style('color', '#C0C0BB')\r\n    graph.select('line').remove()\r\n  }, [sandbox, data, axes])\r\n\r\n  useEffect(() => {\r\n    d3.csv('cars.csv').then(data => {\r\n      data.forEach(d => {\r\n        d.mpg = +d.mpg\r\n        d.cylinders = +d.cylinders\r\n        d.displacement = +d.displacement\r\n        d.horsepower = +d.horsepower\r\n        d.weight = +d.weight\r\n        d.acceleration = +d.acceleration\r\n        d.year = +d.year\r\n      })\r\n      setData(data)\r\n    })\r\n  }, [])\r\n\r\n  const selectChangeHandler = number => e => {\r\n    const value = e.target.value\r\n    setAxes(a => (number === 0 ? [value, a[1]] : [a[0], value]))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={{ display: 'flex' }}>\r\n        <label style={{ marginRight: 4 }} htmlFor=\"x\">\r\n          x-axis\r\n        </label>\r\n        <select id=\"x\" onChange={selectChangeHandler(0)}>\r\n          <option value=\"mpg\">mpg</option>\r\n          <option value=\"cylinders\">cylinders</option>\r\n          <option value=\"displacement\">displacement</option>\r\n          <option value=\"horsepower\">horsepower</option>\r\n          <option value=\"weight\">weight</option>\r\n          <option value=\"acceleration\">acceleration</option>\r\n          <option value=\"year\">year</option>\r\n        </select>\r\n        <label style={{ marginLeft: 10, marginRight: 4 }} htmlFor=\"y\">\r\n          y-axis\r\n        </label>\r\n        <select id=\"y\" onChange={selectChangeHandler(1)} value={axes[1]}>\r\n          <option value=\"mpg\">mpg</option>\r\n          <option value=\"cylinders\">cylinders</option>\r\n          <option value=\"displacement\">displacement</option>\r\n          <option value=\"horsepower\">horsepower</option>\r\n          <option value=\"weight\">weight</option>\r\n          <option value=\"acceleration\">acceleration</option>\r\n          <option value=\"year\">year</option>\r\n        </select>\r\n      </div>\r\n      <svg ref={sandbox} width=\"700\" height=\"400\" />\r\n    </>\r\n  )\r\n}\r\n","import * as d3 from 'd3'\r\nimport React, { useEffect, useRef } from 'react'\r\n\r\nexport default function Face() {\r\n  const sandbox = useRef(null)\r\n\r\n  useEffect(() => {\r\n    const svg = d3.select(sandbox.current)\r\n\r\n    const height = +svg.attr('height')\r\n    const width = +svg.attr('width')\r\n    const arc = d3.arc()\r\n\r\n    //face\r\n    svg\r\n      .append('circle')\r\n      .attr('r', height / 2 - 5)\r\n      .attr('cx', width / 2)\r\n      .attr('cy', height / 2)\r\n      .attr('fill', 'yellow')\r\n      .attr('stroke', 'black')\r\n\r\n    //left eye\r\n    const leftEye = svg\r\n      .append('circle')\r\n      .attr('r', 17)\r\n      .attr('cx', width / 2 - 70)\r\n      .attr('cy', height / 2 - 40)\r\n      .attr('fill', 'black')\r\n\r\n    //right eye\r\n    const rightEye = svg\r\n      .append('circle')\r\n      .attr('r', 17)\r\n      .attr('cx', width / 2 + 70)\r\n      .attr('cy', height / 2 - 40)\r\n      .attr('fill', 'black')\r\n\r\n    //moth\r\n    svg\r\n      .append('path')\r\n      .attr(\r\n        'd',\r\n        arc({\r\n          innerRadius: 0,\r\n          outerRadius: 90,\r\n          startAngle: Math.PI / 2,\r\n          endAngle: (Math.PI * 3) / 2\r\n        })\r\n      )\r\n      .attr('transform', `translate(${width / 2},${height / 1.7})`)\r\n\r\n    //repeat transition\r\n    d3.interval(() => {\r\n      rightEye\r\n        .transition()\r\n        .duration(500)\r\n        .attr('r', 20)\r\n        .transition()\r\n        .duration(500)\r\n        .attr('r', 17)\r\n    }, 900)\r\n\r\n    d3.interval(() => {\r\n      leftEye\r\n        .transition()\r\n        .duration(500)\r\n        .attr('r', 20)\r\n        .transition()\r\n        .duration(500)\r\n        .attr('r', 17)\r\n    }, 1000)\r\n  }, [sandbox])\r\n\r\n  return <svg ref={sandbox} width=\"700\" height=\"300\" />\r\n}\r\n","import * as d3 from 'd3'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\n\r\nexport default function Interactions() {\r\n  const sandbox = useRef(null)\r\n  const [fruits, setFruits] = useState(initailState)\r\n  const [opacity, setOpacity] = useState(0.9)\r\n\r\n  useEffect(() => {\r\n    const svg = d3.select(sandbox.current)\r\n\r\n    renderBowelOfFruit(svg, { fruits, opacity, selectFruit })\r\n  }, [sandbox, fruits, opacity])\r\n\r\n  const selectFruit = fruit => {\r\n    setFruits(frts =>\r\n      frts.map(frt => {\r\n        if (frt.id === fruit.id) {\r\n          frt.selected = !frt.selected\r\n          return frt\r\n        }\r\n        return frt\r\n      })\r\n    )\r\n  }\r\n\r\n  const addFruit = name => () => {\r\n    setFruits(frts => [\r\n      ...frts,\r\n      { type: name, id: Math.random(), selected: false }\r\n    ])\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <svg ref={sandbox} width=\"700\" height=\"300\" />\r\n      <div>\r\n        <button\r\n          style={{ margin: 5 }}\r\n          onClick={() => setFruits(frts => frts.splice(0, frts.length - 1))}\r\n        >\r\n          EAT A FRUIT\r\n        </button>\r\n        <button style={{ margin: 5 }} onClick={addFruit('apple')}>\r\n          ADD AN APPLE\r\n        </button>\r\n        <button style={{ margin: 5 }} onClick={addFruit('lemon')}>\r\n          ADD A LEMON\r\n        </button>\r\n        <button\r\n          style={{ margin: 5 }}\r\n          onClick={() => setOpacity(o => (o === 0.9 ? 0.7 : 0.9))}\r\n        >\r\n          CHANGE OPACITY\r\n        </button>\r\n        <button\r\n          style={{ margin: 5 }}\r\n          onClick={() =>\r\n            setFruits(frts =>\r\n              frts.map(frt => ({\r\n                ...frt,\r\n                type: frt.type === 'lemon' ? 'apple' : 'lemon'\r\n              }))\r\n            )\r\n          }\r\n        >\r\n          REPLACE\r\n        </button>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst initailState = [\r\n  { type: 'apple', id: Math.random(), selected: false },\r\n  { type: 'lemon', id: Math.random(), selected: false },\r\n  { type: 'apple', id: Math.random(), selected: false },\r\n  { type: 'lemon', id: Math.random(), selected: true },\r\n  { type: 'apple', id: Math.random(), selected: false }\r\n]\r\n\r\nconst renderBowelOfFruit = (selection, props) => {\r\n  const height = +selection.attr('height')\r\n  const width = +selection.attr('width')\r\n  const { fruits, opacity, selectFruit } = props\r\n\r\n  const colorScale = d3\r\n    .scaleOrdinal()\r\n    .domain(['apple', 'lemon'])\r\n    .range(['#8a0a05', '#f6d601'])\r\n  const radiusScale = d3\r\n    .scaleOrdinal()\r\n    .domain(['apple', 'lemon'])\r\n    .range([40, 20])\r\n\r\n  const fruitGroups = selection.selectAll('g').data(fruits, d => d.id)\r\n\r\n  //enter and update\r\n  const fruitGroupsEnter = fruitGroups.enter().append('g')\r\n\r\n  fruitGroupsEnter\r\n    .transition()\r\n    .duration(500)\r\n    .attr(\r\n      'transform',\r\n      () =>\r\n        `translate(${d3.randomUniform(0, width)()},${d3.randomUniform(\r\n          0,\r\n          height\r\n        )()})`\r\n    )\r\n  fruitGroupsEnter\r\n    .append('circle')\r\n    .merge(fruitGroups.select('circle'))\r\n    .on('click', fruit => selectFruit(fruit))\r\n    .style('stroke-width', d => (d.selected ? 3 : 0))\r\n    .style('stroke', d => (d.selected ? 'cadetblue' : ''))\r\n    .style('cursor', 'pointer')\r\n    .transition()\r\n    .duration(500)\r\n    .attr('r', d => radiusScale(d.type))\r\n    .attr('fill', d => colorScale(d.type))\r\n    .style('opacity', opacity)\r\n\r\n  fruitGroupsEnter\r\n    .append('text')\r\n    .merge(fruitGroups.select('text'))\r\n    .transition()\r\n    .duration(500)\r\n    .text(d => d.type)\r\n    .attr('y', d => (d.type === 'lemon' ? '30' : '50'))\r\n    .attr('x', d => (d.type === 'lemon' ? '-16' : '-14'))\r\n    .style('font-size', '12')\r\n    .style('opacity', opacity)\r\n\r\n  //exit\r\n  fruitGroups\r\n    .exit()\r\n    .transition()\r\n    .duration(500)\r\n    .attr('transform', `scale(0)`)\r\n    .remove()\r\n}\r\n","import * as d3 from 'd3'\r\nimport React, { useEffect, useRef } from 'react'\r\n\r\nexport default function ScatterChart() {\r\n  const sandbox = useRef(null)\r\n\r\n  useEffect(() => {\r\n    const svg = d3.select(sandbox.current)\r\n    const width = svg.attr('width')\r\n    const height = svg.attr('height')\r\n\r\n    const render = data => {\r\n      const xValue = d => d.population\r\n      const yValue = d => d.country\r\n      const margin = { top: 50, right: 30, bottom: 100, left: 120 }\r\n      const innerWidth = width - margin.right - margin.left\r\n      const innerHeight = height - margin.top - margin.bottom\r\n\r\n      const xScale = d3\r\n        .scaleLinear()\r\n        .domain([0, d3.max(data, xValue)])\r\n        .range([0, innerWidth])\r\n        .nice()\r\n\r\n      const yScale = d3\r\n        .scalePoint()\r\n        .domain(data.map(yValue))\r\n        .range([0, innerHeight])\r\n        .padding(0.6)\r\n\r\n      const graph = svg\r\n        .append('g')\r\n        .attr('transform', `translate(${margin.left},${margin.top})`)\r\n\r\n      //left axis\r\n\r\n      const yAxis = d3.axisLeft(yScale).tickSize(-innerWidth)\r\n\r\n      graph\r\n        .append('g')\r\n        .call(yAxis)\r\n        .style('color', '#635F5D')\r\n\r\n      //bottom axis\r\n      const xAxis = d3\r\n        .axisBottom(xScale)\r\n        .tickFormat(number =>\r\n          d3\r\n            .format('0.2s')(number)\r\n            .replace('G', 'B')\r\n        )\r\n        .tickSize(-innerHeight)\r\n\r\n      graph\r\n        .append('g')\r\n        .call(xAxis)\r\n        .style('color', '#635F5D')\r\n        .attr('transform', `translate(0,${innerHeight})`)\r\n        .select('.domain')\r\n        .remove()\r\n\r\n      //graph bars\r\n      graph\r\n        .selectAll('circle')\r\n        .data(data)\r\n        .enter()\r\n        .append('circle')\r\n        .attr('cy', d => yScale(yValue(d)))\r\n        .attr('cx', d => xScale(xValue(d)))\r\n        .attr('r', 7)\r\n        .attr('fill', 'cornflowerblue')\r\n\r\n      graph\r\n        .append('text')\r\n        .text('Top 10 Most Populous Countries')\r\n        .attr('transform', `translate(100,-20)`)\r\n        .attr('fill', '#635F5D')\r\n\r\n      graph\r\n        .append('text')\r\n        .text('Population')\r\n        .attr('transform', `translate(230,300)`)\r\n        .style('font-size', '1.2em')\r\n        .style('color', '#C0C0BB')\r\n        .attr('fill', '#C0C0BB')\r\n\r\n      graph.selectAll('.tick line').style('color', '#C0C0BB')\r\n      graph.select('line').remove()\r\n    }\r\n\r\n    d3.csv('population.csv').then(data => {\r\n      data.forEach(d => (d.population = +d.population * 1000))\r\n      render(data)\r\n    })\r\n  }, [sandbox])\r\n\r\n  return <svg ref={sandbox} width='700' height='400' />\r\n}\r\n","import * as d3 from 'd3'\r\nimport React, { useEffect, useRef } from 'react'\r\n\r\nexport default function TempLineChart() {\r\n  const sandbox = useRef(null)\r\n\r\n  useEffect(() => {\r\n    const svg = d3.select(sandbox.current)\r\n    const width = svg.attr('width')\r\n    const height = svg.attr('height')\r\n    const titleLabel = 'A week in san francisco'\r\n    const xAxisLabel = 'Time'\r\n    const yAxisLabel = 'Temperature'\r\n\r\n    const render = data => {\r\n      const yValue = d => d.temperature\r\n      const xValue = d => d.timestamp\r\n      const margin = { top: 50, right: 30, bottom: 50, left: 60 }\r\n      const innerWidth = width - margin.right - margin.left\r\n      const innerHeight = height - margin.top - margin.bottom\r\n\r\n      const xScale = d3\r\n        .scaleTime()\r\n        .domain(d3.extent(data, xValue))\r\n        .range([0, innerWidth])\r\n        .nice()\r\n\r\n      const yScale = d3\r\n        .scaleLinear()\r\n        .domain(d3.extent(data, yValue).reverse())\r\n        .range([0, innerHeight])\r\n        .nice()\r\n\r\n      const graph = svg\r\n        .append('g')\r\n        .attr('transform', `translate(${margin.left},${margin.top})`)\r\n\r\n      //left axis\r\n      const yAxis = d3\r\n        .axisLeft(yScale)\r\n        .tickSize(-innerWidth)\r\n        .tickPadding(10)\r\n\r\n      graph\r\n        .append('g')\r\n        .call(yAxis)\r\n        .style('color', '#635F5D')\r\n\r\n      //bottom axis\r\n      const xAxis = d3\r\n        .axisBottom(xScale)\r\n        .tickSize(-innerHeight)\r\n        .tickPadding(10)\r\n\r\n      graph\r\n        .append('g')\r\n        .call(xAxis)\r\n        .style('color', '#635F5D')\r\n        .attr('transform', `translate(0,${innerHeight})`)\r\n        .select('.domain')\r\n        .remove()\r\n\r\n      const lineGenerator = d3\r\n        .line()\r\n        .x(d => xScale(xValue(d)))\r\n        .y(d => yScale(yValue(d)))\r\n        .curve(d3.curveBasis)\r\n\r\n      graph\r\n        .append('path')\r\n        .attr('d', lineGenerator(data))\r\n        .style('fill', 'none')\r\n        .style('stroke-width', 5)\r\n        .style('stroke', 'maroon')\r\n        .style('stroke-linejoin', 'round')\r\n\r\n      // graph\r\n      //   .selectAll('circle')\r\n      //   .data(data)\r\n      //   .enter()\r\n      //   .append('circle')\r\n      //   .attr('cy', d => yScale(yValue(d)))\r\n      //   .attr('cx', d => xScale(xValue(d)))\r\n      //   .attr('r', 6)\r\n      //   .attr('fill', 'cornflowerblue')\r\n      //   .style('opacity', 0.5)\r\n\r\n      graph\r\n        .append('text')\r\n        .text(titleLabel)\r\n        .attr('transform', `translate(100,-20)`)\r\n        .attr('fill', '#635F5D')\r\n\r\n      graph\r\n        .append('text')\r\n        .text(xAxisLabel)\r\n        .attr('transform', `translate(250,340)`)\r\n        .style('font-size', '1.2em')\r\n        .style('color', '#C0C0BB')\r\n        .attr('fill', '#C0C0BB')\r\n\r\n      graph\r\n        .append('text')\r\n        .text(yAxisLabel)\r\n        .attr('transform', 'rotate(-90)')\r\n        .attr('x', -innerHeight / 2 - 50)\r\n        .attr('y', -40)\r\n        .style('font-size', '1.2em')\r\n        .style('color', '#C0C0BB')\r\n        .attr('fill', '#C0C0BB')\r\n\r\n      graph.selectAll('.tick line').style('color', '#C0C0BB')\r\n      graph.select('line').remove()\r\n    }\r\n\r\n    d3.csv('temperature.csv').then(data => {\r\n      data.forEach(d => {\r\n        d.temperature = +d.temperature\r\n        d.timestamp = new Date(d.timestamp)\r\n      })\r\n      render(data)\r\n    })\r\n  }, [sandbox])\r\n\r\n  return <svg ref={sandbox} width=\"700\" height=\"400\" />\r\n}\r\n","import * as d3 from 'd3'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\n\r\nexport default function CountriesTree() {\r\n  const sandbox = useRef(null)\r\n  const [treeRoot, setTreeRoot] = useState(null)\r\n\r\n  useEffect(() => {\r\n    if (!treeRoot) return\r\n\r\n    const svg = d3.select(sandbox.current)\r\n    const height = +svg.attr('height')\r\n    const width = +svg.attr('width')\r\n    const margin = { top: 0, right: 50, bottom: 0, left: 50 }\r\n    const innerWidth = width - margin.left - margin.right\r\n    const innerHeight = height - margin.top - margin.bottom\r\n\r\n    const treeLayout = d3.tree().size([innerHeight, innerWidth])\r\n    const whole = svg\r\n      .append('g')\r\n      .attr('transform', `translate(${margin.left},${margin.top})`)\r\n\r\n    const links = treeLayout(treeRoot).links()\r\n    const linkPathGeneratpor = d3\r\n      .linkHorizontal()\r\n      .x(d => d.y)\r\n      .y(d => d.x)\r\n\r\n    svg.call(\r\n      d3.zoom().on('zoom', () => {\r\n        whole.attr('transform', d3.event.transform)\r\n      })\r\n    )\r\n\r\n    whole\r\n      .selectAll('path')\r\n      .data(links)\r\n      .enter()\r\n      .append('path')\r\n      .attr('class', 'link')\r\n      .attr('d', linkPathGeneratpor)\r\n\r\n    whole\r\n      .selectAll('text')\r\n      .data(treeRoot.descendants())\r\n      .enter()\r\n      .append('text')\r\n      .attr('x', d => d.y)\r\n      .attr('y', d => d.x)\r\n      .attr('dy', '0.32em')\r\n      .text(d => d.data.data.id)\r\n      .attr('class', 'tree-text')\r\n      .attr('text-anchor', d => (d.children ? 'middle' : 'start'))\r\n      .style('font-size', d => {\r\n        switch (d.depth) {\r\n          case 0:\r\n            return '2em'\r\n          case 1:\r\n            return '1.5em'\r\n          case 2:\r\n            return '0.9em'\r\n          default:\r\n            return '0.17em'\r\n        }\r\n      })\r\n  }, [sandbox, treeRoot])\r\n\r\n  useEffect(() => {\r\n    d3.json('tree.json').then(data => setTreeRoot(d3.hierarchy(data)))\r\n  }, [])\r\n\r\n  return <svg ref={sandbox} width=\"800\" height=\"800\" />\r\n}\r\n","import * as d3 from 'd3'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { feature } from 'topojson-client'\r\n\r\nexport default function ChoroplethMap() {\r\n  const sandbox = useRef(null)\r\n  const [map, setMap] = useState(null)\r\n  const [mapMeta, setMapMeta] = useState(null)\r\n  const [category, setCategory] = useState(null)\r\n\r\n  useEffect(() => {\r\n    if (!map) return\r\n    if (!mapMeta) return\r\n\r\n    const svg = d3.select(sandbox.current)\r\n    const projection = d3.geoNaturalEarth1()\r\n    const pathGenerator = d3.geoPath().projection(projection)\r\n    const countries = feature(map, map.objects.countries)\r\n\r\n    const wholeUpdate = svg.selectAll('.whole').data([null])\r\n    const wholeEnter = wholeUpdate\r\n      .enter()\r\n      .append('g')\r\n      .attr('class', 'whole')\r\n    const whole = wholeUpdate.merge(wholeEnter)\r\n\r\n    const legend = svg.append('g').attr('transform', 'translate(30,300)')\r\n    svg.call(\r\n      d3.zoom().on('zoom', () => {\r\n        whole.attr('transform', d3.event.transform)\r\n      })\r\n    )\r\n    const colorScale = economyColorScale(mapMeta)\r\n\r\n    wholeEnter\r\n      .append('path')\r\n      .attr('class', 'sphere')\r\n      .attr('d', pathGenerator({ type: 'Sphere' }))\r\n\r\n    const countryPaths = whole.selectAll('.country2').data(countries.features)\r\n    const countryPathsEnter = countryPaths\r\n      .enter()\r\n      .append('path')\r\n      .attr('class', 'country2')\r\n      .attr('d', pathGenerator)\r\n      .attr('fill', d => colorScale(mapMeta[d.id].economy))\r\n\r\n    countryPathsEnter.merge(countryPaths).attr('opacity', d => {\r\n      if (!category) {\r\n        return 1\r\n      } else {\r\n        return mapMeta[d.id].economy === category ? 1 : 0.1\r\n      }\r\n    })\r\n\r\n    countryPathsEnter\r\n      .append('title')\r\n      .text(d => mapMeta[d.id].name + ' | ' + mapMeta[d.id].economy)\r\n\r\n    legend.call(economyColorLegend, {\r\n      colorScale,\r\n      circleRadius: 8,\r\n      spacing: 20,\r\n      textOffset: 12,\r\n      rectWidth: 240,\r\n      setCategory: setCategory,\r\n      category\r\n    })\r\n  }, [sandbox, map, mapMeta, category, setCategory])\r\n\r\n  useEffect(() => {\r\n    d3.json('map.json').then(data => setMap(data))\r\n    d3.tsv('map-meta.tsv').then(data => {\r\n      setMapMeta(data.reduce((a, c) => ({ ...a, [c.iso_n3]: c }), {}))\r\n    })\r\n  }, [])\r\n\r\n  return <svg ref={sandbox} width=\"960\" height=\"500\" />\r\n}\r\n\r\nfunction economyColorScale(mapMeta) {\r\n  const colorScale = d3.scaleOrdinal()\r\n  const domain = Object.values(mapMeta)\r\n    .reduce(\r\n      (allColors, country) =>\r\n        allColors.includes(country.economy)\r\n          ? allColors\r\n          : [...allColors, country.economy],\r\n      []\r\n    )\r\n    .sort()\r\n    .reverse()\r\n  const range = d3.schemeSpectral[domain.length]\r\n\r\n  return colorScale.domain(domain).range(range)\r\n}\r\n\r\nfunction economyColorLegend(selection, props) {\r\n  const {\r\n    colorScale,\r\n    circleRadius,\r\n    spacing,\r\n    textOffset,\r\n    rectWidth,\r\n    setCategory,\r\n    category\r\n  } = props\r\n\r\n  const container = selection.selectAll('rect').data([null])\r\n  const n = colorScale.domain().length\r\n  container\r\n    .enter()\r\n    .append('rect')\r\n    .merge(container)\r\n    .attr('x', -circleRadius * 2)\r\n    .attr('y', -circleRadius * 2)\r\n    .attr('rx', circleRadius * 2)\r\n    .attr('width', rectWidth)\r\n    .attr('height', spacing * n + circleRadius * 2)\r\n    .attr('fill', 'white')\r\n    .attr('opacity', 0.8)\r\n\r\n  const groups = selection.selectAll('.tick').data(colorScale.domain())\r\n  const groupsEnter = groups\r\n    .enter()\r\n    .append('g')\r\n    .attr('class', 'tick')\r\n  groupsEnter\r\n    .merge(groups)\r\n    .attr('transform', (_, i) => `translate(0,${i * spacing})`)\r\n    .attr('opacity', d => (d === category || category === null ? 1 : 0.4))\r\n    .on('click', d => (d === category ? setCategory(null) : setCategory(d)))\r\n\r\n  groups.exit().remove()\r\n\r\n  groupsEnter\r\n    .append('circle')\r\n    .merge(groups.select('circle'))\r\n    .attr('r', circleRadius)\r\n    .attr('fill', colorScale)\r\n\r\n  groupsEnter\r\n    .append('text')\r\n    .merge(groups.select('text'))\r\n    .text(d => d)\r\n    .attr('dy', '0.32em')\r\n    .attr('x', textOffset)\r\n}\r\n","import * as d3 from 'd3'\r\nimport React, { useEffect, useRef } from 'react'\r\n\r\nexport default function MultiLineChart() {\r\n  const sandbox = useRef(null)\r\n\r\n  useEffect(() => {\r\n    const svg = d3.select(sandbox.current)\r\n    const width = svg.attr('width')\r\n    const height = svg.attr('height')\r\n    const titleLabel = 'A Aeek Of Temperature Around The World'\r\n    const xAxisLabel = 'Time'\r\n    const yAxisLabel = 'Temperature'\r\n\r\n    const render = data => {\r\n      const yValue = d => d.temperature\r\n      const xValue = d => d.timestamp\r\n      const colorValue = d => d.city\r\n      const margin = { top: 50, right: 170, bottom: 50, left: 60 }\r\n      const innerWidth = width - margin.right - margin.left\r\n      const innerHeight = height - margin.top - margin.bottom\r\n\r\n      const nestedData = d3\r\n        .nest()\r\n        .key(colorValue)\r\n        .entries(data)\r\n\r\n      const xScale = d3\r\n        .scaleTime()\r\n        .domain(d3.extent(data, xValue))\r\n        .range([0, innerWidth])\r\n        .nice()\r\n\r\n      const yScale = d3\r\n        .scaleLinear()\r\n        .domain(d3.extent(data, yValue).reverse())\r\n        .range([0, innerHeight])\r\n        .nice()\r\n\r\n      const colorScale = d3\r\n        .scaleOrdinal(d3.schemeCategory10)\r\n        .domain(nestedData.map(data => data.key))\r\n\r\n      const graph = svg\r\n        .append('g')\r\n        .attr('transform', `translate(${margin.left},${margin.top})`)\r\n\r\n      //left axis\r\n      const yAxis = d3\r\n        .axisLeft(yScale)\r\n        .tickSize(-innerWidth)\r\n        .tickPadding(10)\r\n\r\n      graph\r\n        .append('g')\r\n        .call(yAxis)\r\n        .style('color', '#635F5D')\r\n\r\n      //bottom axis\r\n      const xAxis = d3\r\n        .axisBottom(xScale)\r\n        .tickSize(-innerHeight)\r\n        .tickPadding(10)\r\n\r\n      graph\r\n        .append('g')\r\n        .call(xAxis)\r\n        .style('color', '#635F5D')\r\n        .attr('transform', `translate(0,${innerHeight})`)\r\n        .select('.domain')\r\n        .remove()\r\n\r\n      const lineGenerator = d3\r\n        .line()\r\n        .x(d => xScale(xValue(d)))\r\n        .y(d => yScale(yValue(d)))\r\n        .curve(d3.curveBasis)\r\n\r\n      graph\r\n        .selectAll('.path-line')\r\n        .data(nestedData)\r\n        .enter()\r\n        .append('path')\r\n        .attr('class', 'line-path')\r\n        .attr('d', d => lineGenerator(d.values))\r\n        .attr('stroke', d => colorScale(d.key))\r\n        .style('fill', 'none')\r\n        .style('stroke-width', 5)\r\n        .style('stroke-linejoin', 'round')\r\n        .style('stroke-linecap', 'round')\r\n        .style('mix-blend-mode', 'multiply')\r\n\r\n      graph\r\n        .append('text')\r\n        .text(titleLabel)\r\n        .attr('transform', `translate(100,-20)`)\r\n        .attr('fill', '#635F5D')\r\n\r\n      graph\r\n        .append('text')\r\n        .text(xAxisLabel)\r\n        .attr('transform', `translate(250,340)`)\r\n        .style('font-size', '1.2em')\r\n        .style('color', '#C0C0BB')\r\n        .attr('fill', '#C0C0BB')\r\n\r\n      graph\r\n        .append('text')\r\n        .text(yAxisLabel)\r\n        .attr('transform', 'rotate(-90)')\r\n        .attr('x', -innerHeight / 2 - 50)\r\n        .attr('y', -40)\r\n        .style('font-size', '1.2em')\r\n        .style('color', '#C0C0BB')\r\n        .attr('fill', '#C0C0BB')\r\n\r\n      graph.selectAll('.tick line').style('color', '#C0C0BB')\r\n      graph.select('line').remove()\r\n\r\n      svg\r\n        .append('g')\r\n        .attr('transform', 'translate(770,200)')\r\n        .call(colorLegend, {\r\n          colorScale,\r\n          circleRadius: 8,\r\n          spacing: 20,\r\n          textOffset: 12,\r\n          rectWidth: 150\r\n        })\r\n    }\r\n\r\n    d3.csv('weekdata.csv').then(data => {\r\n      data.forEach(d => {\r\n        d.temperature = +d.temperature\r\n        d.timestamp = new Date(d.timestamp)\r\n      })\r\n      render(data)\r\n    })\r\n  }, [sandbox])\r\n\r\n  return <svg ref={sandbox} width=\"900\" height=\"400\" />\r\n}\r\n\r\nfunction colorLegend(selection, props) {\r\n  const { colorScale, circleRadius, spacing, textOffset, rectWidth } = props\r\n\r\n  const container = selection.selectAll('rect').data([null])\r\n  const n = colorScale.domain().length\r\n  container\r\n    .enter()\r\n    .append('rect')\r\n    .merge(container)\r\n    .attr('x', -circleRadius * 2)\r\n    .attr('y', -circleRadius * 2)\r\n    .attr('rx', circleRadius * 2)\r\n    .attr('width', rectWidth)\r\n    .attr('height', spacing * n + circleRadius * 2)\r\n    .attr('fill', 'white')\r\n    .attr('opacity', 0.8)\r\n\r\n  const groups = selection.selectAll('.tick').data(colorScale.domain())\r\n  const groupsEnter = groups\r\n    .enter()\r\n    .append('g')\r\n    .attr('class', 'tick')\r\n  groupsEnter\r\n    .merge(groups)\r\n    .attr('transform', (_, i) => `translate(0,${i * spacing})`)\r\n\r\n  groups.exit().remove()\r\n\r\n  groupsEnter\r\n    .append('circle')\r\n    .merge(groups.select('circle'))\r\n    .attr('r', circleRadius)\r\n    .attr('fill', colorScale)\r\n\r\n  groupsEnter\r\n    .append('text')\r\n    .merge(groups.select('text'))\r\n    .text(d => d)\r\n    .attr('dy', '0.32em')\r\n    .attr('x', textOffset)\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n","import React from 'react'\r\nimport AreaChart from './d3/AreaChart'\r\nimport BarChart from './d3/BarChart'\r\nimport CarsScatterPlot from './d3/CarsScatterPlot'\r\nimport Face from './d3/Face'\r\nimport Interactions from './d3/Interactions'\r\nimport ScatterChart from './d3/ScatterChart'\r\nimport TempLineChart from './d3/TempLineChart'\r\nimport CountriesTree from './d3/CountriesTree'\r\nimport ChoroplethMap from './d3/ChoroplethMap'\r\nimport MultiLineChart from './d3/MultiLineChart'\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <h1>D3 training</h1>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          marginBottom: 30\r\n        }}\r\n      >\r\n        <h2>Fact</h2>\r\n        <Face />\r\n        <h2>Bar Chart</h2>\r\n        <BarChart />\r\n        <h2>Scatter plot</h2>\r\n        <ScatterChart />\r\n        <h2>Temperature line plot</h2>\r\n        <TempLineChart />\r\n        <h2>Population area chart</h2>\r\n        <AreaChart />\r\n        <h2>Bowel Of Fruit - Interactions</h2>\r\n        <Interactions />\r\n        <h2>World Countries Tree</h2>\r\n        <CountriesTree />\r\n        <h2>Choropleth Map</h2>\r\n        <ChoroplethMap />\r\n        <h2>Car Scatter plot</h2>\r\n        <CarsScatterPlot />\r\n        <h2>Multi Line Chart</h2>\r\n        <MultiLineChart />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}